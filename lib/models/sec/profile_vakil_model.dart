

import '../base/safe_convert.dart';
import '../entity/lawyer_profile_entity.dart';

class LawyerModel extends LawyerEntity{
  LawyerModel({
  int? id,
  String? userId,
  String? education,
  String? academicDiscipline,
  String? educationPlace,
  String? licenseNumber,
  String? licenseCreateDate,
  String? licenseExpireDate,
  String? cityName,
  String? addressOffice,
  String? tellOffice,
  String? lat,
  String? long,
  String? isIntern,
  String? instagram,
  String? whatsApp,
  String? webSite,
  String? nationalCardPicFront,
  String? nationalCardPicBack,
  String? birthCertificatePic,
  String? licensePic,
  String? status,
  String? createdAt,
  String? updatedAt,
}):super(
    id:id ?? 0,
      userId   :userId ?? "",
      education :education ?? '',
      academicDiscipline    :academicDiscipline ?? '',
      educationPlace :educationPlace ?? '',
      licenseNumber :licenseNumber ?? "",
      licenseCreateDate :licenseCreateDate ?? "",
      licenseExpireDate :licenseExpireDate ??'',
      cityName  :cityName ?? "",
      addressOffice :addressOffice ?? "",
      tellOffice  :tellOffice ?? "",
      lat   :lat ?? "",
      long :long ?? "",
      isIntern :isIntern ??"",
      instagram  :instagram ??"",
      whatsApp  :whatsApp ?? "",
      webSite :webSite ?? "",
      nationalCardPicFront :nationalCardPicFront ??"",
      nationalCardPicBack  :nationalCardPicBack ?? "",
      birthCertificatePic   :birthCertificatePic ?? "",
      licensePic  :licensePic?? "",
      status  :status ?? '',
      createdAt  :createdAt ?? "",
      updatedAt  :updatedAt ??"",
  );

  factory LawyerModel.fromJson(Map<String, dynamic>? json) => LawyerModel(
    id: asT<int>(json, 'id'),
    userId: asT<String>(json, 'user_id'),
    education: asT<dynamic>(json, 'education'),
    academicDiscipline: asT<dynamic>(json, 'academic_discipline'),
    educationPlace: asT<dynamic>(json, 'education_place'),
    licenseNumber: asT<String>(json, 'license_number'),
    licenseCreateDate: asT<String>(json, 'license_create_date'),
    licenseExpireDate: asT<String>(json, 'license_expire_date'),
    cityName: asT<String>(json, 'city_name'),
    addressOffice: asT<String>(json, 'address_office'),
    tellOffice: asT<String>(json, 'Tell_office'),
    lat: asT<String>(json, 'lat'),
    long: asT<String>(json, 'long'),
    isIntern: asT<String>(json, 'is_intern'),
    instagram: asT<String>(json, 'instagram'),
    whatsApp: asT<String>(json, 'whats_app'),
    webSite: asT<String>(json, 'web_site'),
    nationalCardPicFront: asT<String>(json, 'national_card_pic_front'),
    nationalCardPicBack: asT<String>(json, 'national_card_pic_back'),
    birthCertificatePic: asT<String>(json, 'birth_certificate_pic'),
    licensePic: asT<String>(json, 'license_pic'),
    status: asT<dynamic>(json, 'status'),
    createdAt: asT<String>(json, 'created_at'),
    updatedAt: asT<String>(json, 'updated_at'),
  );

  Map<String, dynamic> toJson() => {
    'id': id,
    'user_id': userId,
    'education': education,
    'academic_discipline': academicDiscipline,
    'education_place': educationPlace,
    'license_number': licenseNumber,
    'license_create_date': licenseCreateDate,
    'license_expire_date': licenseExpireDate,
    'city_name': cityName,
    'address_office': addressOffice,
    'Tell_office': tellOffice,
    'lat': lat,
    'long': long,
    'is_intern': isIntern,
    'instagram': instagram,
    'whats_app': whatsApp,
    'web_site': webSite,
    'national_card_pic_front': nationalCardPicFront,
    'national_card_pic_back': nationalCardPicBack,
    'birth_certificate_pic': birthCertificatePic,
    'license_pic': licensePic,
    'status': status,
    'created_at': createdAt,
    'updated_at': updatedAt,
  };
  factory LawyerModel.fromEntity(final LawyerEntity item) {
    return LawyerModel(
      id:item.id ,
      userId   :item.userId ,
      education :item.education ,
      academicDiscipline    :item.academicDiscipline ,
      educationPlace :item.educationPlace ,
      licenseNumber :item.licenseNumber ,
      licenseCreateDate :item.licenseCreateDate ,
      licenseExpireDate :item.licenseExpireDate ,
      cityName  :item.cityName ,
      addressOffice :item.addressOffice ,
      tellOffice  :item.tellOffice ,
      lat   :item.lat ,
      long :item.long ,
      isIntern :item.isIntern ,
      instagram  :item.instagram ,
      whatsApp  :item.whatsApp ,
      webSite :item.webSite ,
      nationalCardPicFront :item.nationalCardPicFront ,
      nationalCardPicBack  :item.nationalCardPicBack ,
      birthCertificatePic   :item.birthCertificatePic ,
      licensePic  :item.licensePic,
      status  :item.status ,
      createdAt  :item.createdAt ,
      updatedAt  :item.updatedAt ,
    );
  }

}

